[
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Recursion"],
	"text" : "Explain the Tower of Hanoi problem. Develop a recursive function to solve it. What is the minimum number of moves required for n disks with dynamic allocation",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Structures"],
	"text" : "Create an array of structures to store information about multiple students with members for name, reg. no, subject name and marks. Develop a C program to find the student with the highest marks",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Stacks","Recursion"],
	"text" : "Compare the use of stacks in iterative solutions versus recursive solutions. When might one be preferred over the other?",
	"marks" : 2, 
	"timeinmin" : 6,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Array"],
	"text" : "Write a C program that does the following tasks:\ni) Define a function reverseArray that takes two parameters:\n• A pointer to an integer array.\n• An integer representing the size of the array.\nii) Inside reverseArray, use pointers to reverse the elements of the array\niii) In main, dynamically allocate an integer array of size 5, assign values 10, 20, 30, 40, 50 to the array,\nand call reverseArray() to reverse the elements.",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Queue"],
	"text" : " A hospital uses a priority queue to manage patient check-ins. Patients with higher priority (lower number) are attended to first. Implement a program to manage this queue using an array or linked list.\ni) Write a function insertPatient to add a new patient with a given priority into the priority queue while maintaining the priority order.\nii) Write a function removeHighestPriority to remove the patient with the highest priority from the queue.\niii) Using insertPatient, add patients with priorities 3, 1, 4, 2 and show the order of patients in the queue after each insertion. Then, use removeHighestPriority to remove two patients, showing the order after each removal.",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Linked List"],
	"text" : "A school maintains a linked list to keep track of students in the order they register for an event.\nImplement functions to manage this linked list.\ni) Write a function addStudent that takes a student's name and adds them to the end of the linked list.\nii) Write a function removeStudent that takes a student's name and removes the student from the list, updating the list order.\niii) Use your functions to perform the following:\n• Add students 'Alice', 'Bob', 'Charlie', and 'Diana' in order, showing the list after each addition.\nRemove 'Bob' and 'Charlie' from the list, showing the list order after each removal",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Tree","infix-postfix"],
    "text" : "Write a C program to construct an expression tree for the expression for the given postfix expression ABCD ^*+ and to evaluate it", 
	"marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Recursion","Tree"],
    "text" : " Develop a recursive C function to create a binary search tree by inserting node at required position in the tree. Use following function prototype: struct Node* createBST(struct Node* root, int item) where root points to the root node of the binary search tree and item is the value to be inserted to the binary search tree. Create the binary search tree by inserting following list of numbers by depicting the tree after each insertion.\n 40, 15, 55, 24, 32, 18, 75, 49",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Tree"],
    "text" : "Given a threaded binary tree, write a C program to implement a function search that searches for a given value in the tree. Define a structure for the nodes. Your function should take the root of the tree and key value to be searched as input, and efficiently utilize the threads to traverse the tree and find the specified value. If the value is found, the function should return a pointer to the node containing the value; otherwise, it should return NULL.\nDemonstrate how you can call this function search in main function, on a sample tree with nodes containing values 10, 5, 20, 1, 8, 15, and 25. Assume that the threaded binary tree is already created, and the threads are properly set up.",
    "marks" : 4, 
	"timeinmin" : 12,
	"images": ["/data/question_images/Screenshot 2025-09-06 121757.png"]
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "diagram",
	"chapter" : ["Graph"],
    "text" : "Consider the following undirected graph represented using adjacency matrix:\nDraw the corresponding graph and perform a Depth-First Search (DFS) traversal and Breadth-First Search (BFS) traversal, starting from node A. Write down the order in which the nodes are visited in both cases in form of table using the format given below.\nClearly indicate the role of stack/queue or any backtracking that occurs during the traversal under 'Action'.",
    "marks" : 4, 
	"timeinmin" : 12,
	"images": ["/data/question_images/Screenshot 2025-09-06 122537.png"]
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "diagram",
	"chapter" : ["Graph"],
    "text" : "Consider the following undirected graph represented using adjacency matrix:\nDraw the corresponding graph and perform a Depth-First Search (DFS) traversal and Breadth-First Search (BFS) traversal, starting from node A. Write down the order in which the nodes are visited in both cases in form of table using the format given below.\nClearly indicate the role of stack/queue or any backtracking that occurs during the traversal under 'Action'.",
    "marks" : 4, 
	"timeinmin" : 12,
	"images": ["/data/question_images/Screenshot 2025-09-06 122537.png"]
},  
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Misc."],
    "text" : "Multiple user tasks are submitted to the CPU for processing in a multi-user operating system. The tasks must be managed effectively to ensure fair use of CPU resources and prevent any user's tasks from monopolizing the system. Write C functions to demonstrate how priority levels can be incorporated into this task scheduling system to ensure critical tasks are processed while non-critical tasks wait",
    "marks" : 2, 
	"timeinmin" : 6,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Tree"],
    "text" : " In an IoT (Internet of Things) network, sensors are connected in a tree structure, where each sensor can communicate with two other sensors (left and right children). Each sensor node represents a point in the network, and the communication between each pair of nodes can experience latency. To assess the network's reliability, it's essential to calculate the longest path from one leaf node to another. Write a C program to determine the longest communication path in the network tree.",
    "marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Tree"],
    "text" : "For the given traversals of a binary tree, construct the corresponding binary tree. Explain each step of the construction process with figures. Finally, write the postorder traversal of the constructed tree. Preorder traversal:\n25, 15, 10, 4, 12, 22, 18, 24, 50, 35, 31, 44, 70, 66, 90\nIn-order traversal:\n4, 10, 12, 15, 18, 22, 24, 25, 31, 35, 44, 50, 66, 70, 9",
    "marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Tree"],
    "text" : "Apply the rules of generating adjacency matrix representation and adjacency list representation, and write the two forms of representation for the given directed graph in figure 5C.",
    "marks" : 2, 
	"timeinmin" : 6,
	"images": ["/data/question_images/Screenshot 2025-09-06 123341.png"]
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "hybrid",
	"chapter" : ["Pointer"],
	"text" : "Explain dynamic memory allocation functions malloc ( ),alloc ( ), realloc ( ), free ( ) with the help of programming example.",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Array","Pointer"],
	"text" : "Write a C program to reverse an array using pointers",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Linked List","Pointer"],
	"text" : "Explain self-referential structure with an example. Give any one use of self-referential structure.",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "hybrid",
	"chapter" : ["Queue"],
	"text" : "What are the advantages of Circular Queue over Queue ? Write a menu drive program to implement simple arithmetic operation in Circular Queue",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["infix-postfix"],
	"text" : "Convert the following infix expression into its equivalent postfix expression. \n A + (B * C (D / E F) * G) * H",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Stack"],
	"text" : "Define stacks. List and explain the various operations on stacks using arrays with stack overflow and stack underflow conditions.",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Linked List"],
	"text" : "Write a C Program to do the following \n 1. Create a circular singly linked list with each node storing an Integer value. \n 2. Delete all those nodes of a circular singly linked list which contains prime numbers.",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "code",
	"chapter" : ["Linked List"],
	"text" : "Write a program to merge two sorted linked list (P & Q -assume that they are available) \n to get a single sorted list S.\n eg. P : 1 -> 2 ->45 ->56 \n Q : 3 -> 24 -> 56 -> 63 -> 66.",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Queue"],
	"text" : "Define queue? What is the disadvantage of ordinary queue and how to overcome it?",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Tree"],
	"text" : "Explain different cases for deletion of a node in binary search tree. Write function for each case .",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Graph"],
	"text" : "Define Graph. For the given graph as shown in Fig (a), show the adjacency matrix and adjacency list representation of the graph.",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": ["data/question_images/Screenshot 2025-09-06 122503.png"]
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Tree"],
	"text" : "Define the terms: Leaf, Siblings, Root, and Pathin context of a binary Tree",
	"marks" : 2, 
	"timeinmin" : 6,
	"images": []
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Tree"],
	"text" : "Find inorder, postorder and preorder traversal for the binary search tree and write down the function for the following operations with respect to BST. i) Find maximum element ii) Find minimum element",
	"marks" : 4, 
	"timeinmin" : 12,
	"images": ["data/question_images/Screenshot 2025-09-06 123215.png"]
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Tree"],
	"text" : "Consider the following Graph and perform the BFS and DFS Traversal",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": ["data/question_images/Screenshot 2025-09-06 123339.png"]
},
{
	"subject" : "DS",
	"source_year" : 2024,
	"type" : "text",
	"chapter" : ["Graph"],
	"text" : "Construct a binary tree from a given preorder and inorder sequence: \n Preorder: A B D G C E H I F \n Inorder: D G B A H E I C F",
	"marks" : 3, 
	"timeinmin" : 9,
	"images": []
}
]